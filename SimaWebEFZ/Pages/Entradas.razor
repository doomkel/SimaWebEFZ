@page "/entradas"

@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject IEntradasData _db

<h3>Entradas</h3>

@if(entradas is null)
{
    <p>Cargando...</p>
}
else
{
    <div class="form-group row">
        <label for="Inicial" class="col-sm2 col-form-label">
            Fecha Inicial
        </label>
        <div class="col-sm4">
            <input type="date" class="form-control valid" value="2022-12-01" />
        </div>
        <label for="Final" class="col-sm2 col-form-label">
            Fecha Final
        </label>
        <div class="col-sm4">
            <input type="date" class="form-control valid" value="2022-12-01" />
        </div>
    </div>

    <table class="table table-dark">
         <thead>
             <tr>
                <th>Fecha</th>
                <th>Folio</th>
                <th>Recibe</th>
                <th>Nombre</th>
                <th>Factura</th>
                <th>Sku</th>
                <th>Codigo</th>
                <th>Descripcion</th>
                <th>Piezas</th>
             </tr>
         </thead>
         <tbody>
             @foreach (var item in entradas)
            {
                <tr>
                    <td>@item.fecha.ToShortDateString()</td>
                    <td>@item.folio</td>
                    <td>@item.recibe</td>
                    <td>@item.alm_recibe</td>
                    <td>@item.factura</td>
                    <td>@item.sku</td>
                    <td>@item.cod_componente</td>
                    <td>@item.des_componente</td>
                    <td>@item.pzas</td>
                </tr>
            }
         </tbody>
    </table>
}

@code {
    private List<EntradasModel> entradas;

    protected override async Task OnInitializedAsync()
    {
        entradas = await _db.GetEntradas();
    }
}
